{"version":3,"sources":["../src/Featherhead.js"],"names":[],"mappings":";;;;;;;;;;;;qBAAuB,SAAS;;IAApB,KAAK;;AAEjB,IAAI,WAAW,GAAG,SAAS,CAAC;;IAEf,WAAW;AAEX,WAFA,WAAW,GAED;QAAT,IAAI,gCAAC,EAAE;;0BAFR,WAAW;;AAGpB,QAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAK,IAAI,GAAG,IAAI,IAAI,EAAE;AACpB,UAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACpB,UAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;KACvB;;AAED,QAAI,CAAC,IAAI,CAAC,MAAM,IAAK,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,AAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,EAAE;AACjF,YAAM,KAAK,CAAC,2DAA2D,CAAC,CAAA;KACzE;;AAED,QAAI,CAAC,IAAI,CAAC,MAAM,IAAK,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,AAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,EAAE;AACjF,YAAM,KAAK,CAAC,2DAA2D,CAAC,CAAA;KACzE;GACF;;eAhBU,WAAW;;WAkBd,kBAAC,IAAI,EAAE;AACb,UAAI,MAAM,GAAG,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnD,UAAI,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACjC,UAAI,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7B,aAAO,UAAU,GAAG,MAAM,GAAG,IAAI,CAAC;KACnC;;;WAEM,iBAAC,IAAI,EAAE;AACZ,UAAI,MAAM,GAAG,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAEnD,UAAI,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACjC,UAAI,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7B,UAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;;AAErC,aAAO,eAAe,GAAG,MAAM,GAAG,IAAI,CAAC;KACxC;;;WAEQ,qBAAG;AACV,aAAO,eAAe,CAAC;KACxB;;;SArCU,WAAW;;;QAAX,WAAW,GAAX,WAAW","file":"Featherhead.js","sourcesContent":["import * as Utils from './Utils';\n\nvar RE_EXT_JSON = /\\.json$/;\n\nexport class Featherhead {\n\n  constructor(info={}) {\n    let keys = Object.keys(info);\n    for (let idx in keys) {\n      let key = keys[idx];\n      this[key] = info[key];\n    }\n\n    if (!this.commit || (typeof this.commit !== 'string') || this.commit.length != 40) {\n      throw Error(\"Featherhead: invalid commit option passed to constructor.\")\n    }\n\n    if (!this.assets || (typeof this.assets !== 'string') || this.assets.length != 40) {\n      throw Error(\"Featherhead: invalid assets option passed to constructor.\")\n    }\n  }\n\n  assetURL(path) {\n    let assets = Utils.encodeURIComponent(this.assets);\n    path = Utils.normalizePath(path);\n    path = Utils.encodeURI(path);\n    return '/_asset/' + assets + path;\n  }\n\n  dataURL(path) {\n    let commit = Utils.encodeURIComponent(this.commit);\n\n    path = Utils.normalizePath(path);\n    path = Utils.encodeURI(path);\n    path = path.replace(RE_EXT_JSON, '');\n\n    return '/_data/fetch/' + commit + path;\n  }\n\n  commitURL() {\n    return '/_data/commit';\n  }\n\n}\n"]}